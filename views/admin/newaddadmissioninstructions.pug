extends ../layouts/cms-base.pug

block styles
  style.
    :root {
      --primary: #2c3e50;
      --secondary: #3498db;
      --accent: #e74c3c;
      --light: #f8f9fa;
      --dark: #212529;
      --success: #28a745;
      --danger: #dc3545;
      --border: #dee2e6;
      --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      --transition: all 0.3s ease;
    }
    
    .admission-manager {
      background: linear-gradient(135deg, #f5f7fa 0%, #e4edf5 100%);
      padding: 30px 0;
      min-height: 100vh;
    }
    .form-group p {
      color: #666;
      font-size: 0.9rem;
      margin-bottom: 0.5rem;
      word-break: break-all;
      padding: 0.5rem;
      background-color: #f5f5f5;
      border-radius: 4px;
    }
    
    .admission-container {
      max-width: 1000px;
      margin: 0 auto;
      background: white;
      border-radius: 12px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
      overflow: hidden;
      padding: 30px;
    }
    
    .admission-header {
      text-align: center;
      padding: 20px 0 30px;
      position: relative;
    }
    
    .admission-header h1 {
      color: var(--primary);
      font-size: 2.2rem;
      margin-bottom: 10px;
      font-weight: 700;
      position: relative;
      display: inline-block;
    }
    
    .admission-header h1:after {
      content: '';
      position: absolute;
      bottom: -10px;
      left: 50%;
      transform: translateX(-50%);
      width: 70px;
      height: 4px;
      background: var(--secondary);
      border-radius: 2px;
    }
    
    .alert {
      padding: 15px 20px;
      border-radius: 8px;
      margin-bottom: 25px;
      font-size: 1rem;
      display: flex;
      align-items: center;
      animation: fadeIn 0.4s ease;
    }
    
    .alert-success {
      background-color: rgba(40, 167, 69, 0.1);
      border: 1px solid rgba(40, 167, 69, 0.3);
      color: var(--success);
    }
    
    .alert-danger {
      background-color: rgba(220, 53, 69, 0.1);
      border: 1px solid rgba(220, 53, 69, 0.3);
      color: var(--danger);
    }
    
    .alert i {
      margin-right: 10px;
      font-size: 1.3rem;
    }
    
    .form-group {
      margin-bottom: 25px;
    }
    
    label {
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
      color: var(--primary);
      font-size: 1rem;
    }
    
    .form-control {
      width: 100%;
      padding: 12px 15px;
      border: 1px solid var(--border);
      border-radius: 8px;
      font-size: 1rem;
      transition: var(--transition);
      background-color: #fff;
      color: var(--dark);
    }
    
    .form-control:focus {
      outline: none;
      border-color: var(--secondary);
      box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
    }
    
    textarea.form-control {
      min-height: 100px;
      resize: vertical;
    }
    
    .file-upload {
      display: flex;
      align-items: center;
      gap: 15px;
      margin-bottom: 15px;
    }
    
    .file-upload-preview {
      max-width: 200px;
      border: 1px dashed var(--border);
      padding: 10px;
      border-radius: 8px;
      display: flex;
      align-items: center;
      gap: 10px;
    }
    
    .file-upload-preview i {
      font-size: 2rem;
      color: var(--secondary);
    }
    
    .file-upload-info {
      flex-grow: 1;
    }
    
    .file-upload-info small {
      display: block;
      color: var(--dark);
      margin-top: 5px;
    }
    
    .action-buttons {
      display: flex;
      gap: 15px;
      margin-top: 30px;
      flex-wrap: wrap;
    }
    
    .btn {
      padding: 12px 25px;
      border-radius: 8px;
      font-weight: 600;
      font-size: 1rem;
      transition: var(--transition);
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      border: none;
    }
    
    .btn i {
      margin-right: 8px;
    }
    
    .btn-primary {
      background-color: var(--secondary);
      color: white;
      box-shadow: 0 4px 10px rgba(52, 152, 219, 0.3);
    }
    
    .btn-primary:hover {
      background-color: #2980b9;
      transform: translateY(-2px);
      box-shadow: 0 6px 15px rgba(52, 152, 219, 0.4);
    }
    
    .btn-secondary {
      background-color: rgba(52, 152, 219, 0.1);
      color: var(--secondary);
    }
    
    .btn-secondary:hover {
      background-color: rgba(52, 152, 219, 0.2);
    }
    
    .instruction-item {
      background: #f8f9fa;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 15px;
      position: relative;
    }
    
    .remove-instruction {
      position: absolute;
      top: 15px;
      right: 15px;
      background: rgba(220, 53, 69, 0.1);
      color: var(--danger);
      border: none;
      width: 30px;
      height: 30px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }
    
    .remove-instruction:hover {
      background: rgba(220, 53, 69, 0.2);
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    @media (max-width: 768px) {
      .admission-container {
        padding: 20px;
        border-radius: 0;
      }
      
      .admission-header h1 {
        font-size: 1.8rem;
      }
      
      .btn {
        width: 100%;
      }
      
      .action-buttons {
        flex-direction: column;
        gap: 10px;
      }
    }

block content
  .admission-manager
    .admission-container
      .admission-header
        h1 Manage Admission Instructions
        p Create and edit admission information for prospective students

      if successMessage
        .alert.alert-success
          i.fas.fa-check-circle
          | #{successMessage}
      if errorMessage
        .alert.alert-danger
          i.fas.fa-exclamation-circle
          | #{errorMessage}
      
      form(method="POST" action="/cms/admissions-iitm/adminsioninstructions" enctype="multipart/form-data")
        .form-group
          label Title:
          input.form-control(
            type="text"
            name="title"
            value=instructions.title || 'Admission Instructions'
            placeholder="Enter admission title"
            required
          )
        
        .form-group
          label Heading:
          input.form-control(
            type="text"
            name="heading"
            value=instructions.heading || 'Admissions Open for Academic Session'
            placeholder="Enter main heading"
            required
          )
        
        .form-group
          label Admission Form PDF:
          if instructions.form_url
            p Current PDF URL: #{instructions.form_url}
            .file-upload
              .file-upload-preview
                i.fas.fa-file-pdf
                .file-upload-info
                  strong Current File
                  small
                    a.pdf-download-link(href=instructions.form_url target="_blank") 
                      i.fas.fa-download
                      | Download PDF
                    br
                    | Upload new file to replace
              input.form-control(
                type="file" 
                name="formFile" 
                accept=".pdf"
              )
          else
            input.form-control(
              type="file" 
              name="formFile" 
              accept=".pdf"
              required
            )

        .form-group
          label Instructions:
          #instructions-container
            if instructions.instructions && instructions.instructions.length > 0
              each instruction, index in instructions.instructions
                .instruction-item
                  textarea.form-control(
                    name="instructionText[]"
                    placeholder="Enter instruction text"
                    required
                  )= instruction
                  if index > 0
                    button.remove-instruction(
                      type="button" 
                      onclick="this.parentElement.remove()"
                    )
                      i.fas.fa-times
            else
              .instruction-item
                textarea.form-control(
                  name="instructionText[]"
                  placeholder="Enter instruction text"
                  required
                )
          
          button.btn.btn-secondary(
            type="button" 
            onclick="addInstruction()"
          )
            i.fas.fa-plus
            | Add Instruction
        
        .action-buttons
          button.btn.btn-primary(type="submit")
            i.fas.fa-save
            | Save Instructions

  script.
    function addInstruction() {
      const container = document.getElementById('instructions-container');
      const count = container.querySelectorAll('.instruction-item').length;
      
      const newItem = document.createElement('div');
      newItem.className = 'instruction-item';
      newItem.innerHTML = `
        <textarea class="form-control" name="instructionText[]" placeholder="Enter instruction text" required></textarea>
        <button type="button" class="remove-instruction" onclick="this.parentElement.remove()">
          <i class="fas fa-times"></i>
        </button>
      `;
      
      container.appendChild(newItem);
      newItem.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
    }

    // Initialize file input display
    document.querySelector('input[type="file"]')?.addEventListener('change', function(e) {
      if (this.files.length > 0) {
        const fileName = this.files[0].name;
        const preview = this.previousElementSibling;
        if (preview?.classList.contains('file-upload-preview')) {
          preview.querySelector('.file-upload-info strong').textContent = 'New File: ' + fileName;
        }
      }
    });